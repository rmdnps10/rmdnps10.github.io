{"version":3,"file":"component---src-pages-index-js-6fbe5387e92b0ca84c6f.js","mappings":"mPA0IA,UAlIkBA,IAAyB,IAADC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUH,EACnC,MAAMI,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAS,oBAC7CC,EAAQN,EAAKO,kBAAkBC,MAE/BC,EAAU,IAAIC,IACpBJ,EAAMK,SAAQC,IACZA,EAAKC,YAAYC,KAAKH,SAAQI,GAAON,EAAQO,IAAID,IAAK,IAGxD,MAAM,EAACE,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UACpC,IAAIC,gBAAgBnB,EAASoB,QAAQC,IAAI,QAAU,KAGrDC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAc,IAAIJ,gBAAgBnB,EAASoB,QAC7CJ,EACFO,EAAYC,IAAI,MAAOR,GAEvBO,EAAYE,OAAO,OAErBC,OAAOC,QAAQC,aACb,CAAC,EACD,GACA,GAAG5B,EAAS6B,YAAYN,EAAYO,aACrC,GACA,CAACd,EAAahB,EAAS6B,SAAU7B,EAASoB,SAE7C,MAAMW,EAAgBf,EAClBX,EAAM2B,QAAOrB,GAAQA,EAAKC,YAAYC,KAAKoB,SAASjB,KACpDX,EAEJ,OAAqB,IAAjBA,EAAM6B,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACpC,SAAUA,EAAUI,MAAOH,GACjCkC,EAAAA,cAACE,EAAAA,EAAG,MACJF,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACC,EAAAA,EAAM,CAACpC,SAAUA,EAAUI,MAAOH,GACjCkC,EAAAA,cAACE,EAAAA,EAAG,MACJF,EAAAA,cAAA,KAAGG,UAAU,0CACM,KAAhBtB,EAAqB,OAAS,GAAGA,KACjCe,EAAcG,OAAO,UAExBC,EAAAA,cAAA,OAAKG,UAAU,gCACbH,EAAAA,cAAA,UACEI,QAASA,IAAMtB,EAAe,IAC9BqB,UAAW,wBACO,KAAhBtB,EACI,sBACA,sEAEP,OAGDmB,EAAAA,cAAA,OAAKG,UAAU,6BACdE,EAAAA,EAAAA,GAAIhC,GAASiC,KAAI3B,GAChBqB,EAAAA,cAAA,UACEO,IAAK5B,EACLyB,QAASA,IAAMtB,EAAeH,GAC9BwB,UAAW,wBACTtB,IAAgBF,EACZ,sBACA,uEAGLA,MAIPqB,EAAAA,cAAA,OAAKG,UAAU,6BACZP,EAAcU,KAAI9B,IACjB,MAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKgC,OAAOC,KAC9CC,EAAYlC,EAAKC,YAAYiC,WAC/BC,EAAAA,EAAAA,GAASnC,EAAKC,YAAYiC,WAC1B,KAEJ,OACEV,EAAAA,cAAA,OACEO,IAAK/B,EAAKgC,OAAOC,KACjBN,UAAU,0DAEVH,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAIrC,EAAKgC,OAAOC,KAAMK,SAAS,OACnCd,EAAAA,cAAA,WACEG,UAAU,MACVY,WAAS,EACTC,SAAS,6BAERN,GACCV,EAAAA,cAACiB,EAAAA,EAAW,CACVC,MAAOR,EACPS,IAAKlD,EACLkC,UAAU,6BAIdH,EAAAA,cAAA,OAAKG,UAAU,QACbH,EAAAA,cAAA,MAAIG,UAAU,qCACXlC,GAEH+B,EAAAA,cAAA,SAAOG,UAAU,iBACd3B,EAAKC,YAAY2C,MAEpBpB,EAAAA,cAAA,WAASG,UAAU,QACjBH,EAAAA,cAAA,KACEqB,wBAAyB,CACvBC,OAAQ9C,EAAKC,YAAY8C,aAAe/C,EAAKgD,SAE/CV,SAAS,cACTX,UAAU,sBAMhB,KAIL,EAMN,MAAMsB,EAAOA,IAAMzB,EAAAA,cAAC0B,EAAAA,EAAG,CAACzD,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { useState, useEffect } from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `난너의오른팔's dev blog`\n  const posts = data.allMarkdownRemark.nodes\n\n  const tagList = new Set()\n  posts.forEach(post => {\n    post.frontmatter.tags.forEach(tag => tagList.add(tag))\n  })\n\n  const [selectedTag, setSelectedTag] = useState(\n    new URLSearchParams(location.search).get(\"tag\") || \"\"\n  )\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search)\n    if (selectedTag) {\n      queryParams.set(\"tag\", selectedTag)\n    } else {\n      queryParams.delete(\"tag\")\n    }\n    window.history.replaceState(\n      {},\n      \"\",\n      `${location.pathname}?${queryParams.toString()}`\n    )\n  }, [selectedTag, location.pathname, location.search])\n\n  const filteredPosts = selectedTag\n    ? posts.filter(post => post.frontmatter.tags.includes(selectedTag))\n    : posts\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <p className=\"text-3xl font-bold text-white m-0 mt-5\">\n        {selectedTag === \"\" ? \"All \" : `${selectedTag} `}\n        {filteredPosts.length} Posts\n      </p>\n      <div className=\"flex gap-2 pt-2 items-center\">\n        <button\n          onClick={() => setSelectedTag(\"\")}\n          className={`px-2 py-0.5 border-2 ${\n            selectedTag === \"\"\n              ? \"bg-white text-black\"\n              : \"border-white text-white\"\n          } rounded-lg hover:bg-red hover:text-black`}\n        >\n          All\n        </button>\n        <div className=\"w-0.5 h-[30px] bg-white\"></div>\n        {[...tagList].map(tag => (\n          <button\n            key={tag}\n            onClick={() => setSelectedTag(tag)}\n            className={`px-2 py-0.5 border-2 ${\n              selectedTag === tag\n                ? \"bg-white text-black\"\n                : \"border-white text-white\"\n            } rounded-lg hover:scale-110 transition-all`}\n          >\n            {tag}\n          </button>\n        ))}\n      </div>\n      <div className=\"flex flex-col gap-10 pt-4\">\n        {filteredPosts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const thumbnail = post.frontmatter.thumbnail\n            ? getImage(post.frontmatter.thumbnail)\n            : null\n\n          return (\n            <div\n              key={post.fields.slug}\n              className=\"bg-darkBackground shadow-md rounded-lg overflow-hidden\"\n            >\n              <Link to={post.fields.slug} itemProp=\"url\">\n                <article\n                  className=\"p-0\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  {thumbnail && (\n                    <GatsbyImage\n                      image={thumbnail}\n                      alt={title}\n                      className=\"w-full h-60 object-cover\"\n                    />\n                  )}\n\n                  <div className=\"px-5\">\n                    <h2 className=\"text-xl font-bold mb-2 text-white\">\n                      {title}\n                    </h2>\n                    <small className=\"text-gray-500\">\n                      {post.frontmatter.date}\n                    </small>\n                    <section className=\"mt-2\">\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                        className=\"text-gray-700\"\n                      />\n                    </section>\n                  </div>\n                </article>\n              </Link>\n            </div>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(width: 300, layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","tagList","Set","forEach","post","frontmatter","tags","tag","add","selectedTag","setSelectedTag","useState","URLSearchParams","search","get","useEffect","queryParams","set","delete","window","history","replaceState","pathname","toString","filteredPosts","filter","includes","length","React","Layout","Bio","className","onClick","_toConsumableArray","map","key","fields","slug","thumbnail","getImage","Link","to","itemProp","itemScope","itemType","GatsbyImage","image","alt","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}